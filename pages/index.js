import Head from "next/head";
import db from "../Firebase/client";
import { query, collection, getDocs, where } from "firebase/firestore";
import { useDispatch } from "react-redux";
import { setGralData } from "../state/generalData";
import { useEffect, useState } from "react";
import { orderByField, findMaxSales } from "../utils/functions.js";
import ResultBox from "../Commons/ResultBox";
import { Box } from "@chakra-ui/react";
import ResultTable from "../Commons/ResultTable";

export default function Home({ data }) {
  const [info, setInfo] = useState({});
  const [maxMonth, setMaxMonth] = useState("");
  const [maxAgency, setMaxAgency] = useState();
  const dispatch = useDispatch();
  useEffect(() => {
    const agencies = orderByField(data, "nameAgency");
    const months = orderByField(data, "day");
    const maxMonth = findMaxSales(months).toUpperCase();
    const maxAgency = findMaxSales(agencies);
    console.log(
      "ðŸš€ ~ file: index.js ~ line 24 ~ useEffect ~ maxAgency",
      maxAgency
    );
    setMaxMonth(maxMonth);
    setMaxAgency(agencies[maxAgency].totalSales);
    setInfo(agencies);
    dispatch(setGralData(agencies));
  }, []);

  return (
    <Box>
      <Head>
        <title>Andes Test</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box
        display="flex"
        flexDir="row"
        alignItems="center"
        justifyContent="space-around"
      >
        <ResultBox result={maxAgency} />
        <ResultBox result={maxMonth} />
      </Box>
      <ResultTable info={info} />
    </Box>
  );
}

export async function getStaticProps() {
  try {
    const dataQuery = await query(
      collection(db, "date-ventas"),
      where("paymentStatus", "==", "Pago realizado")
    );
    const querySnapshot = await getDocs(dataQuery);
    let dataArr = [];
    querySnapshot.forEach((doc) => dataArr.push(doc.data()));
    return { props: { data: dataArr } };
  } catch (error) {
    console.log(error);
  }
}
